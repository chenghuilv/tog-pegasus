/*
	$Log: interfaces.dxx,v $
	Revision 1.2  2001/02/02 18:48:20  karl
	Doc++ expansion
	
	Revision 1.1  2001/01/24 14:18:49  karl
	import Dev Doc Files
	
	$Author: karl $
*/
/** @name Pegasus MSB Interfaces
The Pegasus MSB interfaces with several different entities:

<UL> <LI> Providers
     <LI> Services (Including respositories and other services)
     <LI  Clients which may be either connectors or application consumers
</UL>

Further, it includes both the APIs and the definitions of CIM data that are
required by the broker.

Pegasus has effectivly implemented the same operations and data defintions across all of these interfaces with minor differences because of the special characteristics of each interface.

<B>Client Interface</B>


<B>Provider Interface</B>

In Pegasus, the provider is a separate executable that accesses the
managed resources and is used by the CIMOM to provide access to
data. Providers forward this information to the CIMOM for
integration and interpretation. When the CIMOM receives a
request from a management application for data that is not available from the
CIMOM Repository, it forwards the request to a provider. The
CIMOM Repository only contains static data.
Providers implement a provider interface that supports the type of service
specific to their role. In order to implement the interface, a provider class
must first declare the interface in an implements clause, and then it must
provide an implementation (a body) for all of the abstract methods of
the.interface.


<Services Interface</B>

ATTN: Need to put something here.

<B>Repository Interface</B>

The repository interface isused by the CIMOM to  interface with implementations of the repository thatstore and
retrieve provide persistence for class and instance information. 

A prototype implementation of both a class and instance provider is provided with Pegasus (ATTN: SEE ALSO). However, it is expected that this will be replaced in many installations.

.
*/

