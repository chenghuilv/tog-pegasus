// Generated by genprov 1.2.4
#include "Alert_Provider.h"

CIMPLE_NAMESPACE_BEGIN

Alert_Provider::Alert_Provider() : _indication_handler(0)
{
}

Alert_Provider::~Alert_Provider()
{
}

Load_Status Alert_Provider::load()
{
    return LOAD_OK;
}

Unload_Status Alert_Provider::unload()
{
    return UNLOAD_OK;
}

static void* _thread_proc(void* arg)
{
    Alert_Provider* provider = (Alert_Provider*)arg;

    for (size_t i = 0; i < 10000; i++)
    {
        Time::sleep(Time::SEC/2);

        printf("Sending indication...\n");
        Alert* indic = Alert::create();
        indic->Msg.set("Hello");
        provider->_indication_handler->handle(indic);
    }

    return 0;
}

Enable_Indications_Status Alert_Provider::enable_indications(
    Indication_Handler<Alert>* indication_handler)
{
    printf("***** Alert_Provider::enable_indications()\n");

    _indication_handler = indication_handler;

    Thread thread;
    Thread::create_joinable(thread, (Thread_Proc)_thread_proc, this);

    return ENABLE_INDICATIONS_OK;
}

Disable_Indications_Status Alert_Provider::disable_indications()
{
    printf("***** Alert_Provider::disable_indications()\n");

    if (_indication_handler)
    {
        delete _indication_handler;
        _indication_handler = 0;
    }

    return DISABLE_INDICATIONS_OK;
}

/*@END@*/

CIMPLE_NAMESPACE_END
