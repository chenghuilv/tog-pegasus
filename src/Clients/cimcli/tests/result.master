Returned Path  Test_CLITestEmbeddedClass.Id="111"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "111";
    comment = "test with no embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="111" OK
Returned Path  Test_CLITestEmbeddedClass.Id="201"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "201";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "202";
        comment = "Embedded Instance comment property";
    };
    
    comment = "test with embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="201" OK
Returned Path  Test_CLITestEmbeddedClass.Id="301"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "301";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "302";
        comment = "First property with embedded instance";
    };
    
    embeddedInst2 = 
    instance of Test_CLITestEmbedded2
    {
        Id = "303";
        name = "fred";
        comment = "Second property with embedded instance";
    };
    
    comment = "test with multiple embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="301" OK
Returned Path  Test_CLITestEmbeddedClass.Id="401"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "401";
    embeddedObj = 
    instance of Test_CLITestEmbedded1
    {
        Id = "402";
        comment = "Property is embedded object";
    };
    
    comment = "test with single embedded object";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="401" OK
Returned Path  Test_CLITestEmbeddedClass.Id="501"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "501";
    embeddedInstArray = {
        instance of Test_CLITestEmbedded1
        {
            Id = "502";
            comment = "First embedded Instance";
        };
        , 
        instance of Test_CLITestEmbedded1
        {
            Id = "503";
            comment = "Second embedded Instance";
        };
    }
    comment = "test with array of embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
    };
    Test instance Test_CLITestEmbeddedClass.Id="501" OK
Returned Path  Test_CLITestEmbeddedClass.Id="601"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "601";
    embeddedInstArray = {
        instance of Test_CLITestEmbedded1
        {
            Id = "602";
            comment = "First embedded Instance";
        };
        , 
        instance of Test_CLITestEmbedded1
        {
            Id = "603";
            comment = "Second embedded Instance";
        };
    }
    comment = "test with array of embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
    };
    Test instance Test_CLITestEmbeddedClass.Id="601" OK
Returned Path  Test_CLITestEmbeddedClass.Id="701"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "701";
    embeddedInst = 
    instance of Test_CLITestEmbedded2
    {
        Id = "702";
        recursiveEmbeddedInst = 
        instance of Test_CLITestEmbedded3
        {
            Id = "702";
            comment = "recursive embedded instance";
        };
        
        comment = "Property with embedded instance";
    };
    
    comment = "test with recursive embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="701" OK
Returned Path  Test_CLITestEmbeddedClass.Id="801"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "801";
    embeddedInst = 
    instance of Test_CLITestEmbedded2
    {
        Id = "802";
        recursiveEmbeddedInst = 
        instance of Test_CLITestEmbedded3
        {
            Id = "803";
            comment = "recursive embedded instance";
        };
        
        comment = "Property with embedded instance";
    };
    
    comment = "test with ={ as embed token";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="801" OK
Returned Path  Test_CLITestEmbeddedClass.Id="901"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "901";
    comment = NULL;
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="901" OK
Returned Path  Test_CLITestEmbeddedClass.Id="1001"
Test instance Test_CLITestEmbeddedClass.Id="1001" OK
Test instance Test_CLITestEmbeddedClass.Id="1001" OK
Returned Path  Test_CLITestEmbeddedClass.Id="1101"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "1101";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "1102";
    };
    
    comment = "test with embedded instance with space after {";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="1101" OK
Return Value= 0
firstArg=test string
Return Value= 0
firstArg=test single embedded instance parameter
EmbedInstArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};
lastArg=last parameter
Return Value= 0
firstArg=test single embedded object parameter
embedObjArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};
lastArg=Last Parameter
Return Value= 0
firstArg=test embedded instance array parameter
embedInstArrayArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "502";
};
lastArg=last parameter
Return Value= 0
firstArg=test embedded object array parameter
embedObjArrayArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "502";
};
lastArg=last parameter
Return Value= 0
arraySint32=99 100 110 120 
arrayString=one two three 
Return Value= 0
arraySint32=99 100 110 120 
arrayString=one two three four 
INPUT ERROR: Missing Embedded object Terminator i.e. "}"
INPUT ERROR: Unmatched Embedded instance end marker(s) at parameter="}"
INPUT ERROR: Unmatched Embedded instance end marker(s) at parameter="}"
INPUT ERROR: "!" terminator allowed only on String type.  Parameter= scalBool!
INPUT ERROR: No name on input parameter =301 
INPUT ERROR: No name on input parameter {Test_CLITestEmbedded1 
cimcli CIMException:  Cmd= ci Object= Test_CLITestEmbeddedClass Code= 1
CIM_ERR_FAILED: Key Property Id required
INPUT ERROR: Multiple definition of scalar parameter name=scalSint32
INPUT ERROR: Value conversion error. 110,120s. type sint32

Return Value= 0
+++++ passed test errors tests
