 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT * FROM TestCMPI_Indication WHERE s='s' AND c='c' OR n32>=32 OR n16<=17 OR n64>23 OR r32>=1.0 OR r64=1.2 or b=1 AND s8>1 AND s16>16 AND s32>32 AND s64>64]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n64)
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
       -- Instance_accessor (Property: b)
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 7, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 2
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.s, RS: 's'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.c, RS: 'c'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThanOrEquals , LS: TestCMPI_Indication.n32, RS: 32
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 2 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_LessThanOrEquals , LS: TestCMPI_Indication.n16, RS: 17
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 3 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.n64, RS: 23
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 4 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_real32 , CMPIPredOp:  CMPI_PredOp_GreaterThanOrEquals , LS: TestCMPI_Indication.r32, RS: 1.0000000000000000
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 5 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_real32 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.r64, RS: 1.2000000000000000
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 6 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 5
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.b, RS: 1
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s8, RS: 1
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 2
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s16, RS: 16
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 3
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s32, RS: 32
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 4
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s64, RS: 64
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 1
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.* (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n64)
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
       -- Instance_accessor (Property: b)
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A No projection list, meaning it is SELECT * .... 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n64)
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
       -- Instance_accessor (Property: b)
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT * FROM TestCMPI_Indication WHERE (PropertyA='PropertyA' OR PropertyB='Nothing') AND s='s']
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 2, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 2
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.PropertyA, RS: 'PropertyA'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.s, RS: 's'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 2
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.PropertyB, RS: 'Nothing'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.s, RS: 's'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 1
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.* (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A No projection list, meaning it is SELECT * .... 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT PropertyA, PropertyB FROM TestCMPI_Indication WHERE PropertyA='PropertyA' OR PropertyB='Nothing' OR s='s']
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 3, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.PropertyA, RS: 'PropertyA'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.PropertyB, RS: 'Nothing'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 2 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.s, RS: 's'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.PropertyA (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.PropertyB (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       PropertyA (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       PropertyB (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
       -- Instance_accessor (Property: s)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT s FROM TestCMPI_Indication WHERE NOT (PropertyA='PropertyA' OR PropertyB='Nothing') AND PropertyA='AccessorPropertyA']
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 1, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 3
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_NotEquals , LS: TestCMPI_Indication.PropertyA, RS: 'PropertyA'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_NotEquals , LS: TestCMPI_Indication.PropertyB, RS: 'Nothing'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 2
 --- #E CMGetPredicateData
 ----- Type: CMPI_string , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.PropertyA, RS: 'AccessorPropertyA'
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 1
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.s (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 1
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: PropertyA)
       -- Instance_accessor (Property: PropertyB)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT * FROM TestCMPI_Indication WHERE (s IS NOT NULL) OR (c IS NULL)]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 2, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_boolean , CMPIPredOp:  CMPI_PredOp_NotEquals , LS: TestCMPI_Indication.s, RS: NULL_VALUE
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_boolean , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.c, RS: NULL_VALUE
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 1
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.* (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 ---    #A No projection list, meaning it is SELECT * .... 
 -- #A Evaluate using instance
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.6 CMNewSelectExp with CQL
 ---    #A No projection list, meaning it is SELECT * .... 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s)
       -- Instance_accessor (Property: c)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT n32,r64 FROM TestCMPI_Indication WHERE n32=42 AND r64>=2.2]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 1, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 2
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.n32, RS: 42
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_real32 , CMPIPredOp:  CMPI_PredOp_GreaterThanOrEquals , LS: TestCMPI_Indication.r64, RS: 2.2000000000000002
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.5 CMNewSelectExp with WQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n32)
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT n8,n16,n32,n64 FROM TestCMPI_Indication WHERE n8=8 AND n16=16 AND n32=32 AND n64>32]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n8)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 1, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 4
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.n8, RS: 8
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.n16, RS: 16
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 2
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.n32, RS: 32
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 3
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.n64, RS: 32
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.n8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.n16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.n64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n8)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n8)
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       n64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: n8)
       -- Instance_accessor (Property: n16)
       -- Instance_accessor (Property: n32)
       -- Instance_accessor (Property: n64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT s8,s16,s32,s64 FROM TestCMPI_Indication WHERE s8>1 AND s16=256 OR s32>9999 or s64>=2232]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 3, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 2
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s8, RS: 1
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- #D CMGetPredicateAt, 1
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.s16, RS: 256
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThan , LS: TestCMPI_Indication.s32, RS: 9999
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 2 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_GreaterThanOrEquals , LS: TestCMPI_Indication.s64, RS: 2232
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.s8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.s16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.s32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.s64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s8)
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 4
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s8 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s16 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       s64 (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: s8)
       -- Instance_accessor (Property: s16)
       -- Instance_accessor (Property: s32)
       -- Instance_accessor (Property: s64)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT r32,r64 FROM TestCMPI_Indication WHERE r32<=1.23 OR r64=3.14]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 2, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_real32 , CMPIPredOp:  CMPI_PredOp_LessThanOrEquals , LS: TestCMPI_Indication.r32, RS: 1.2300000000000000
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_real32 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.r64, RS: 3.1400000000000001
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.r32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.5 CMNewSelectExp with WQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: r32)
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r32 (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       r64 (string)
 -- #A Evaluate using instance
 -- #B Evalute using accessor
       -- Instance_accessor (Property: r32)
       -- Instance_accessor (Property: r64)
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
 --- TestCMPI_Indication CMPI ActivateFilter() called
 --- TestCMPI_Indication CMPI ActivateFilter() exited
 --- TestCMPI_Indication CMPI EnableIndication() entered
 --- TestCMPI_Indication CMPI thread(void *) running
 -- #1 MakeObjectPath
 --- make_ObjectPath
 -- #2 MakeInstance
 -- make_Instance
 -- CMGetPropertyCount: 16
 -- 0: PropertyA(CMPI_string: CMPI_goodValue: PropertyA) [CMPI_RC_OK]
 -- 1: PropertyB(CMPI_string: CMPI_goodValue: PropertyB) [CMPI_RC_OK]
 -- 2: s(CMPI_string: CMPI_goodValue: s) [CMPI_RC_OK]
 -- 3: c(CMPI_char16: CMPI_goodValue: c) [CMPI_RC_OK]
 -- 4: n64(CMPI_uint64: CMPI_goodValue: 64) [CMPI_RC_OK]
 -- 5: n32(CMPI_uint32: CMPI_goodValue: 32) [CMPI_RC_OK]
 -- 6: n16(CMPI_uint16: CMPI_goodValue: 16) [CMPI_RC_OK]
 -- 7: n8(CMPI_uint8: CMPI_goodValue: 8) [CMPI_RC_OK]
 -- 8: r64(CMPI_real64: CMPI_goodValue: 3.14156789282829995713086645992007e+00) [CMPI_RC_OK]
 -- 9: r32(CMPI_real32: CMPI_goodValue: 5.8486031497623648e+35) [CMPI_RC_OK]
 -- 10: d(CMPI_dateTime: CMPI_goodValue: ) [CMPI_RC_OK]
 -- 11: s64(CMPI_sint64: CMPI_goodValue: 4294967295) [CMPI_RC_OK]
 -- 12: s32(CMPI_sint32: CMPI_goodValue: -559038737) [CMPI_RC_OK]
 -- 13: s16(CMPI_sint16: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 14: s8(CMPI_sint8: CMPI_goodValue: -1) [CMPI_RC_OK]
 -- 15: b(CMPI_boolean: CMPI_goodValue: TRUE) [CMPI_RC_OK]
 -- #3 CMGetSelExpString
 -- #3.1 Query is [SELECT c,b FROM TestCMPI_Indication WHERE c=c OR b=1]
 -- #3.2 Class is [TestCMPI_Indication]
 -- #4 Clone of CMPISelectExp
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.0 Evaluate instance with passed in CMPISelectExp 
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: b)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 ---   #A CMGetSubCondCountAndType 
 ---- Number of disjunctives: 2, Type: 0
 ---    #B CMGetSubCondAt @ 0 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: Unknown , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.c, RS: TestCMPI_Indication.c
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 ---    #B CMGetSubCondAt @ 1 
 ---    #C CMGetPredicateCount
 ---- Number of predicates in the conjuctives: 1
 --- #D CMGetPredicateAt, 0
 --- #E CMGetPredicateData
 ----- Type: CMPI_uint64 , CMPIPredOp:  CMPI_PredOp_Equals , LS: TestCMPI_Indication.b, RS: 1
 --- #F Evaluate using predicate
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.1 CMNewSelectExp with wrong query (CQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.2 CMNewSelectExp with wrong query (WQL)
 !!!! CMPI_RC_ERR_INVALID_QUERY []
 -- #5.3 CMNewSelectExp with wrong query lang
 !!!! CMPI_RC_ERR_QUERY_LANGUAGE_NOT_SUPPORTED []
 -- #5.4 CMPI_CQL_NewSelectExp (CIMxCQL) with correct query.
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.c (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       TestCMPI_Indication.b (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: b)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 -- #5.5 CMNewSelectExp with WQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       c (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       b (string)
 -- #A Evaluate using instance
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #B Evalute using accessor
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: b)
 !!!! CMPI_RC_ERR_FAILED [type mismatch]
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERR_FAILED [parse error: syntax error]
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 -- #5.6 CMNewSelectExp with CQL
 ---    #A Projection list is: 
 ---    #B CMGetArrayCount, 2
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       c (string)
 ---        #C CMGetArrayElementAt
 ----       type is : 5632
 ----       b (string)
 -- #A Evaluate using instance
 -- Evalute using instance returns true
 -- #B Evalute using accessor
       -- Instance_accessor (Property: c)
       -- Instance_accessor (Property: b)
 -- Evalute using accessor returns true
 -- #C Continue evaluating using GetDOC
 !!!! CMPI_RC_ERROR_SYSTEM []
 -- #D Continue evaluating using GetCOD
 !!!! CMPI_RC_ERR_NOT_SUPPORTED []
 Instance evaluated to true. Delievering indication.
 --- CBDetachThread called
 ---- CMPI_RC_OK []
 --- TestCMPI_Indication CMPI thread(void *) exited
 --- TestCMPI_Indication CMPI EnableIndication() exited
 --- TestCMPI_Indication CMPI DeActivateFilter() entered
 --- TestCMPI_Indication CMPI DeActivateFilter() exited
 --- TestCMPI_Indication CMPI DisableIndication() entered
 --- TestCMPI_Indication CMPI DisableIndication() exited
