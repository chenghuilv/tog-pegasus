0. +++++ Test For getClass

//    Class Test_CLITestProviderClass

class Test_CLITestProviderClass
{
string Id;
string Name;
string requestInputParameters;
boolean scalBool;
uint8 scalUint8;
sint8 scalSint8;
uint16 scalUint16;
sint16 scalSint16;
uint32 scalUint32;
sint32 scalSint32;
uint64 scalUint64;
sint64 scalSint64;
real32 scalReal32;
real64 scalReal64;
string scalString;
datetime scalDateTime;
boolean defaultBool = TRUE;
uint8 defaultUint8 = 4;
sint8 defaultSint8 = 4;
uint16 defaultUint16 = 4;
sint16 defaultSint16 = 4;
uint32 defaultUint32 = 4;
sint32 defaultSint32 = 4;
uint64 defaultUint64 = 4;
sint64 defaultSint64 = 4;
real32 defaultReal32;
real64 defaultReal64;
string defaultString = "test\"embedded\"quote";
datetime defaultDateTime;
boolean arrayBool[];
uint8 arrayUint8[];
sint8 arraySint8[];
uint16 arrayUint16[];
sint16 arraySint16[];
uint32 arrayUint32[];
sint32 arraySint32[];
uint64 arrayUint64[];
sint64 arraySint64[];
real32 arrayReal32[];
real64 arrayReal64[];
string arrayString[];
datetime arrayDateTime[];
uint32 ReferenceParamTest(uint32 InParam1, uint32 OutParam2);
uint32 InOutParamTest(boolean scalBool, uint8 scalUint8, sint8 scalSint8, 
    uint16 scalUint16, sint16 scalSint16, uint32 scalUint32, sint32 
    scalSint32, uint64 scalUint64, real32 scalReal32, real64 scalReal64, 
    string scalString, datetime scalDateTime, boolean arrayBool[], 
    uint8 arrayUint8[], sint8 arraySint8[], uint16 arrayUint16[], sint16 
    arraySint16[], uint32 arrayUint32[], sint32 arraySint32[], uint64 
    arrayUint64[], real32 arrayReal32[], real64 arrayReal64[], string 
    arrayString[], datetime arrayDateTime[], uint32 returnValue);
uint32 FullParamTest(boolean inScalBool, uint8 inScalUint8, sint8 inScalSint8, 
    uint16 inScalUint16, sint16 inScalSint16, uint32 inScalUint32, 
    sint32 inScalSint32, uint64 inScalUint64, real32 inScalReal32, 
    real64 inScalReal64, string inScalString, datetime inScalDateTime, 
    boolean outScalBool, uint8 outScalUint8, sint8 outScalSint8, uint16 
    outScalUint16, sint16 outScalSint16, uint32 outScalUint32, sint32 
    outScalSint32, uint64 outScalUint64, real32 outScalReal32, real64 
    outScalReal64, string outScalString, datetime outScalDateTime);
uint32 setProviderParameters(string substituteHostName);
uint32 resetProviderParameters();
};

//    Class Test_CLITestProviderLinkClass

class Test_CLITestProviderLinkClass
{
reference parent;
reference child;
string requestInputParameters;
};
8. +++++ Test QualifierDecl Operations

Qualifier ASSOCIATION : boolean = FALSE, Scope(class association), 
    Flavor(DisableOverride);

Qualifier Abstract : boolean = FALSE, Scope(class association indication), 
    Flavor(DisableOverride, Restricted);

Qualifier Aggregate : boolean = FALSE, Scope(reference), Flavor(DisableOverride);

Qualifier Aggregation : boolean = FALSE, Scope(association), Flavor(DisableOverride);

Qualifier Alias : string = null, Scope(property reference method), 
    Flavor(Translatable);

Qualifier ArrayType : string = "Bag", Scope(property parameter);

Qualifier ASSOCIATION : boolean = FALSE, Scope(class association), 
    Flavor(DisableOverride);

Qualifier BitMap : string[] = null, Scope(property method parameter);

Qualifier BitValues : string[] = null, Scope(property method parameter), 
    Flavor(Translatable);

Qualifier CLASS : string = null, Scope(property method), Flavor(DisableOverride, 
    Translatable);

Qualifier Counter : boolean = FALSE, Scope(property method parameter);

Qualifier Delete : boolean = FALSE, Scope(association reference);

Qualifier Deprecated : string[] = null, Scope(class association property 
    method);

Qualifier Description : string = null, Scope(any), Flavor(Translatable);

Qualifier DisplayName : string = null, Scope(any), Flavor(Translatable);

Qualifier DN : boolean = FALSE, Scope(property parameter), Flavor(DisableOverride);

Qualifier EmbeddedObject : boolean = FALSE, Scope(property);

Qualifier Expensive : boolean = FALSE, Scope(class association property 
    reference method);

Qualifier Experimental : boolean = FALSE, Scope(any), Flavor(DisableOverride);

Qualifier Gauge : boolean = FALSE, Scope(property method parameter);

Qualifier Ifdeleted : boolean = FALSE, Scope(association reference);

Qualifier In : boolean = TRUE, Scope(parameter), Flavor(DisableOverride);

Qualifier INDICATION : boolean = FALSE, Scope(class indication), Flavor(DisableOverride);

Qualifier Invisible : boolean = FALSE, Scope(class association property 
    reference method);

Qualifier Key : boolean = FALSE, Scope(property reference), Flavor(DisableOverride);

Qualifier Large : boolean = FALSE, Scope(class property);

Qualifier MappingStrings : string[] = null, Scope(class association 
    indication property reference);

Qualifier Max : uint32 = null, Scope(reference);

Qualifier MaxLen : uint32 = null, Scope(property method parameter);

Qualifier MaxValue : sint64 = null, Scope(property method parameter);

Qualifier Min : uint32 = 0, Scope(reference);

Qualifier MinValue : sint64 = null, Scope(property method parameter);

Qualifier ModelCorrespondence : string[] = null, Scope(property);

Qualifier Nonlocal : string = null, Scope(reference);

Qualifier NonlocalType : string = null, Scope(reference);

Qualifier NullValue : string = null, Scope(property), Flavor(DisableOverride);

Qualifier Octetstring : boolean = FALSE, Scope(property parameter);

Qualifier Out : boolean = FALSE, Scope(parameter), Flavor(DisableOverride);

Qualifier Override : string = null, Scope(property reference method), 
    Flavor(DisableOverride);

Qualifier Propagated : string = null, Scope(property), Flavor(DisableOverride);

Qualifier PropertyUsage : string = "CurrentContext", Scope(property);

Qualifier Provider : string = null, Scope(any);

Qualifier Read : boolean = TRUE, Scope(property);

Qualifier Required : boolean = FALSE, Scope(property);

Qualifier Revision : string = ".5", Scope(class association indication), 
    Flavor(Translatable);

Qualifier Source : string = null, Scope(class association indication);

Qualifier SourceType : string = null, Scope(class association indication 
    reference);

Qualifier Static : boolean = FALSE, Scope(property method), Flavor(DisableOverride);

Qualifier Syntax : string = null, Scope(property reference method parameter);

Qualifier SyntaxType : string = null, Scope(property reference method 
    parameter);

Qualifier Terminal : boolean = FALSE, Scope(class);

Qualifier TriggerType : string = null, Scope(class association indication 
    property reference method);

Qualifier Units : string = null, Scope(property method parameter), 
    Flavor(Translatable);

Qualifier UnknownValues : string[] = null, Scope(property), Flavor(DisableOverride);

Qualifier UnsupportedValues : string[] = null, Scope(property), Flavor(DisableOverride);

Qualifier ValueMap : string[] = null, Scope(property method parameter);

Qualifier Values : string[] = null, Scope(property method parameter), 
    Flavor(Translatable);

Qualifier Version : string = "V2.5", Scope(class association indication), 
    Flavor(Translatable);

Qualifier Weak : boolean = FALSE, Scope(reference), Flavor(DisableOverride);

Qualifier Write : boolean = FALSE, Scope(property);
9. +++++ getClass Operation
67 class names  returned.
CIM_ActsAsSpare
CIM_CollectedCollections
CIM_CollectionConfiguration
CIM_CollectionSetting
CIM_CompatibleProduct
CIM_Component
CIM_ConfigurationComponent
CIM_Dependency
CIM_DependencyContext
CIM_ElementCapabilities
CIM_ElementConfiguration
CIM_ElementLocation
CIM_ElementProfile
CIM_ElementSetting
CIM_ElementSettingData
CIM_ElementStatisticalData
CIM_Error
CIM_FRUIncludesProduct
CIM_FRUPhysicalElements
CIM_InstalledSoftwareIdentity
CIM_LogicalIdentity
CIM_ManagedElement
CIM_MemberOfCollection
CIM_OwningCollectionElement
CIM_ParameterValueSources
CIM_ParametersForMethod
CIM_ProductFRU
CIM_ProductParentChild
CIM_ProductPhysicalElements
CIM_ProductProductDependency
CIM_ProductSupport
CIM_RelatedStatisticalData
CIM_RelatedStatistics
CIM_ReplaceableProductFRU
CIM_SAPAvailableForElement
CIM_ServiceAffectsElement
CIM_ServiceAvailableToElement
CIM_SettingContext
CIM_SettingsDefineState
CIM_Statistics
CIM_Synchronized
CIM_SystemSettingContext
PG_TestElement
WET_CollectedCollections
WET_CollectionConfiguration
WET_CollectionSetting
WET_CompatibleProduct
WET_Component
WET_ConfigurationComponent
WET_Dependency
WET_DependencyContext
WET_ElementConfiguration
WET_ElementSetting
WET_FRUIncludesProduct
WET_FRUPhysicalElements
WET_LogicalIdentity
WET_ManagedElement
WET_MemberOfCollection
WET_ProductFRU
WET_ProductParentChild
WET_ProductPhysicalElements
WET_ProductProductDependency
WET_ProductSupport
WET_RelatedStatistics
WET_SettingContext
WET_Statistics
WET_Synchronized

//    Class CIM_ManagedElement

class CIM_ManagedElement
{
string InstanceID;
string Caption;
string Description;
string ElementName;
};
<CLASS NAME="CIM_ManagedElement">
    <PROPERTY NAME="InstanceID" TYPE="string">
    </PROPERTY>
    <PROPERTY NAME="Caption" TYPE="string">
    </PROPERTY>
    <PROPERTY NAME="Description" TYPE="string">
    </PROPERTY>
    <PROPERTY NAME="ElementName" TYPE="string">
    </PROPERTY>
</CLASS>
1. +++++ Test For Reference params
2. +++++ Test Getproperty and setProperty
Name = Bob
Test_CLITestProviderClass.Id="Mike"
path= Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "Mike";
Name = "Bob";
scalBool = TRUE;
scalUint8 = 220;
scalSint8 = 124;
scalUint16 = 100;
scalSint16 = 100;
scalUint32 = 100;
scalSint32 = 100;
scalUint64 = 100;
scalSint64 = NULL;
scalReal32 = 1.0000000000000000e+02;
scalReal64 = 1.0000000000000000e+02;
scalString = "teststring";
scalDateTime = "19991224120000.000000+360";
defaultBool = TRUE;
defaultUint8 = 4;
defaultSint8 = 4;
defaultUint16 = 4;
defaultSint16 = 4;
defaultUint32 = 4;
defaultSint32 = 4;
defaultUint64 = 4;
defaultSint64 = 4;
defaultReal32 = NULL;
defaultReal64 = NULL;
defaultString = "test\"embedded\"quote";
defaultDateTime = NULL;
arrayBool = {TRUE, FALSE, TRUE};
arrayUint8 = {4, 128, 240};
arraySint8 = {4, 126, -126};
arrayUint16 = {4, 128, 240};
arraySint16 = {4, 126, -126};
arrayUint32 = {4, 128, 240};
arraySint32 = {4, 126, -126};
arrayUint64 = {4, 128, 240};
arraySint64 = NULL;
arrayReal32 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayReal64 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayString = {"First", "Second", "Third"};
arrayDateTime = {"19991224120000.000000+360", "19991224120000.000000+360", 
    "19991224120000.000000+360"};
requestInputParameters = "propertyList=Id, Name, requestInputParameters, "
    "scalBool, scalUint8, scalSint8, scalUint16, scalSint16, scalUint32, "
    "scalSint32, scalUint64, scalSint64, scalReal32, scalReal64, scalString, "
    "scalDateTime, defaultBool, defaultUint8, defaultSint8, defaultUint16, "
    "defaultSint16, defaultUint32, defaultSint32, defaultUint64, defaultSint64, "
    "defaultReal32, defaultReal64, defaultString, defaultDateTime, arrayBool, "
    "arrayUint8, arraySint8, arrayUint16, arraySint16, arrayUint32, "
    "arraySint32, arrayUint64, arraySint64, arrayReal32, arrayReal64, "
    "arrayString, arrayDateTime; includeQualifiers=false; includeClassOrigin=false";
};
3. +++++ Tests Instances create Instance
Returned Path  Test_CLITestProviderClass.Id="ScalarTest"
test instance Test_CLITestProviderClass.Id="ScalarTest" OK
Returned Path  Test_CLITestProviderClass.Id="arrayTest"
test instance Test_CLITestProviderClass.Id="arrayTest" OK
Test_CLITestProviderClass.Id="Mike"
Test_CLITestProviderClass.Id="ScalarTest"
Test_CLITestProviderClass.Id="arrayTest"
path= Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "Mike";
Name = "Bob";
scalBool = TRUE;
scalUint8 = 220;
scalSint8 = 124;
scalUint16 = 100;
scalSint16 = 100;
scalUint32 = 100;
scalSint32 = 100;
scalUint64 = 100;
scalSint64 = NULL;
scalReal32 = 1.0000000000000000e+02;
scalReal64 = 1.0000000000000000e+02;
scalString = "teststring";
scalDateTime = "19991224120000.000000+360";
defaultBool = TRUE;
defaultUint8 = 4;
defaultSint8 = 4;
defaultUint16 = 4;
defaultSint16 = 4;
defaultUint32 = 4;
defaultSint32 = 4;
defaultUint64 = 4;
defaultSint64 = 4;
defaultReal32 = NULL;
defaultReal64 = NULL;
defaultString = "test\"embedded\"quote";
defaultDateTime = NULL;
arrayBool = {TRUE, FALSE, TRUE};
arrayUint8 = {4, 128, 240};
arraySint8 = {4, 126, -126};
arrayUint16 = {4, 128, 240};
arraySint16 = {4, 126, -126};
arrayUint32 = {4, 128, 240};
arraySint32 = {4, 126, -126};
arrayUint64 = {4, 128, 240};
arraySint64 = NULL;
arrayReal32 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayReal64 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayString = {"First", "Second", "Third"};
arrayDateTime = {"19991224120000.000000+360", "19991224120000.000000+360", 
    "19991224120000.000000+360"};
requestInputParameters = "propertyList=Id, Name, requestInputParameters, "
    "scalBool, scalUint8, scalSint8, scalUint16, scalSint16, scalUint32, "
    "scalSint32, scalUint64, scalSint64, scalReal32, scalReal64, scalString, "
    "scalDateTime, defaultBool, defaultUint8, defaultSint8, defaultUint16, "
    "defaultSint16, defaultUint32, defaultSint32, defaultUint64, defaultSint64, "
    "defaultReal32, defaultReal64, defaultString, defaultDateTime, arrayBool, "
    "arrayUint8, arraySint8, arrayUint16, arraySint16, arrayUint32, "
    "arraySint32, arrayUint64, arraySint64, arrayReal32, arrayReal64, "
    "arrayString, arrayDateTime; includeQualifiers=false; includeClassOrigin=false";
};
path= Test_CLITestProviderClass.Id="ScalarTest"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "ScalarTest";
scalBool = TRUE;
scalUint8 = 12;
scalSint8 = 12;
scalUint16 = 500;
scalSint16 = 500;
scalUint32 = 9999;
scalSint32 = 9999;
scalUint64 = 99999;
scalString = "testString";
requestInputParameters = "propertyList=Id, Name, requestInputParameters, "
    "scalBool, scalUint8, scalSint8, scalUint16, scalSint16, scalUint32, "
    "scalSint32, scalUint64, scalSint64, scalReal32, scalReal64, scalString, "
    "scalDateTime, defaultBool, defaultUint8, defaultSint8, defaultUint16, "
    "defaultSint16, defaultUint32, defaultSint32, defaultUint64, defaultSint64, "
    "defaultReal32, defaultReal64, defaultString, defaultDateTime, arrayBool, "
    "arrayUint8, arraySint8, arrayUint16, arraySint16, arrayUint32, "
    "arraySint32, arrayUint64, arraySint64, arrayReal32, arrayReal64, "
    "arrayString, arrayDateTime; includeQualifiers=false; includeClassOrigin=false";
};
path= Test_CLITestProviderClass.Id="arrayTest"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "arrayTest";
scalString = "testString";
scalDateTime = "19991224120000.000000+360";
arrayBool = {TRUE, TRUE, TRUE, FALSE, TRUE};
arrayUint8 = {12};
arraySint8 = {-127, 0, 12, 127};
arrayUint32 = {99, 0, 31000, 63000, 4294967295};
arraySint32 = {-32000, 0, 32000, -2147483648, 2147483647};
arrayUint64 = {99, 0, 31000, 63000, 18446744073709551615};
arraySint64 = {-32000, 0, 32000, -9223372036854775808};
requestInputParameters = "propertyList=Id, Name, requestInputParameters, "
    "scalBool, scalUint8, scalSint8, scalUint16, scalSint16, scalUint32, "
    "scalSint32, scalUint64, scalSint64, scalReal32, scalReal64, scalString, "
    "scalDateTime, defaultBool, defaultUint8, defaultSint8, defaultUint16, "
    "defaultSint16, defaultUint32, defaultSint32, defaultUint64, defaultSint64, "
    "defaultReal32, defaultReal64, defaultString, defaultDateTime, arrayBool, "
    "arrayUint8, arraySint8, arrayUint16, arraySint16, arrayUint32, "
    "arraySint32, arrayUint64, arraySint64, arrayReal32, arrayReal64, "
    "arrayString, arrayDateTime; includeQualifiers=false; includeClassOrigin=false";
};
4. +++++ Test Instances modify Instance
modified
test instance Test_CLITestProviderClass.Id="ScalarTest" OK
modified
test instance Test_CLITestProviderClass.Id="ScalarTest" OK
5. +++++ Test delete instance
Returned Path  Test_CLITestProviderClass.Id="ScalarTest"
test instance Test_CLITestProviderClass.Id="ScalarTest" OK
6. +++++ Test invokeMethod
Return Value= 0
7. +++++ Test table output format
10. +++++ testPropertyListOptions

//    Class CIM_ManagedElement

class CIM_ManagedElement
{
string Caption;
};

//    Class CIM_ManagedElement

class CIM_ManagedElement
{
string Caption;
string Description;
};

//    Class CIM_ManagedElement

class CIM_ManagedElement
{
string Caption;
string Description;
string ElementName;
};

//    Class CIM_ManagedElement

class CIM_ManagedElement
{
};
path= Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
scalBool = TRUE;
arrayUint64 = {4, 128, 240};
};
path= Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
};
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
scalBool = TRUE;
scalString = "teststring";
arrayUint64 = {4, 128, 240};
};
12. +++++ test getInstance Operation
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "Mike";
Name = "Bob";
scalBool = TRUE;
scalUint8 = 220;
scalSint8 = 124;
scalUint16 = 100;
scalSint16 = 100;
scalUint32 = 100;
scalSint32 = 100;
scalUint64 = 100;
scalSint64 = NULL;
scalReal32 = 1.0000000000000000e+02;
scalReal64 = 1.0000000000000000e+02;
scalString = "teststring";
scalDateTime = "19991224120000.000000+360";
defaultBool = TRUE;
defaultUint8 = 4;
defaultSint8 = 4;
defaultUint16 = 4;
defaultSint16 = 4;
defaultUint32 = 4;
defaultSint32 = 4;
defaultUint64 = 4;
defaultSint64 = 4;
defaultReal32 = NULL;
defaultReal64 = NULL;
defaultString = "test\"embedded\"quote";
defaultDateTime = NULL;
arrayBool = {TRUE, FALSE, TRUE};
arrayUint8 = {4, 128, 240};
arraySint8 = {4, 126, -126};
arrayUint16 = {4, 128, 240};
arraySint16 = {4, 126, -126};
arrayUint32 = {4, 128, 240};
arraySint32 = {4, 126, -126};
arrayUint64 = {4, 128, 240};
arraySint64 = NULL;
arrayReal32 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayReal64 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayString = {"First", "Second", "Third"};
arrayDateTime = {"19991224120000.000000+360", "19991224120000.000000+360", 
    "19991224120000.000000+360"};
requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
    "includeClassOrigin=false";
};
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Name = "Bob";
scalBool = TRUE;
};
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Name = "Bob";
scalBool = TRUE;
};
13. +++++ test TestInstance Operations
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
test instance Test_CLITestProviderClass.Id="Mike" OK
14. +++++ test Integer Variations
Returned Path  Test_CLITestProviderClass.Id="integerVariationTest"
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "integerVariationTest";
scalBool = TRUE;
scalUint8 = 12;
scalUint16 = 100;
scalUint32 = 9999;
scalUint64 = 99999;
arrayUint32 = {99, 0, 31000, 63000, 4294967295};
requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
    "includeClassOrigin=false";
};
test instance Test_CLITestProviderClass.Id="integerVariationTest" OK
15. +++++ referencetests

//    Class Test_CLITestProviderLinkClass

class Test_CLITestProviderLinkClass
{
reference parent;
reference child;
string requestInputParameters;
};
1 referenceNames
//ChangedHostName/test/TestProvider:Test_CLITestProviderLinkClass
Return Value= 0
path= //localhost/test/TestProvider:Test_CLITestProviderLinkClass.child="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"",parent="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\""

//Instance of Test_CLITestProviderLinkClass
instance of Test_CLITestProviderLinkClass
{
parent = "//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"";
child = "//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"";
requestInputParameters = "role=; resultClass=Test_CLITestProviderLinkClass; "
    "includeQualifiers=false; includeClassOrigin=false; propertyList=NULL";
};
path= //localhost/test/TestProvider:Test_CLITestProviderLinkClass.child="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"",parent="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\""

//Instance of Test_CLITestProviderLinkClass
instance of Test_CLITestProviderLinkClass
{
parent = "//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"";
child = "//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"";
requestInputParameters = "role=parent; resultClass=Test_CLITestProviderLinkClass; "
    "includeQualifiers=false; includeClassOrigin=false; propertyList=NULL";
};
1 referenceNames
//localhost/test/TestProvider:Test_CLITestProviderLinkClass.child="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"",parent="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\""
path= //localhost/test/TestProvider:Test_CLITestProviderLinkClass.child="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\"",parent="//localhost/test/TestProvider:Test_CLITestProviderClass.Id=\"Mike\""

//Instance of Test_CLITestProviderLinkClass
instance of Test_CLITestProviderLinkClass
{
requestInputParameters = "role=child; resultClass=Test_CLITestProviderLinkClass; "
    "includeQualifiers=false; includeClassOrigin=false; propertyList=requestInputParameters";
};
Return Value= 0
16. +++++ associationtests

//    Class Test_CLITestProviderClass

class Test_CLITestProviderClass
{
string Id;
string Name;
string requestInputParameters;
boolean scalBool;
uint8 scalUint8;
sint8 scalSint8;
uint16 scalUint16;
sint16 scalSint16;
uint32 scalUint32;
sint32 scalSint32;
uint64 scalUint64;
sint64 scalSint64;
real32 scalReal32;
real64 scalReal64;
string scalString;
datetime scalDateTime;
boolean defaultBool = TRUE;
uint8 defaultUint8 = 4;
sint8 defaultSint8 = 4;
uint16 defaultUint16 = 4;
sint16 defaultSint16 = 4;
uint32 defaultUint32 = 4;
sint32 defaultSint32 = 4;
uint64 defaultUint64 = 4;
sint64 defaultSint64 = 4;
real32 defaultReal32;
real64 defaultReal64;
string defaultString = "test\"embedded\"quote";
datetime defaultDateTime;
boolean arrayBool[];
uint8 arrayUint8[];
sint8 arraySint8[];
uint16 arrayUint16[];
sint16 arraySint16[];
uint32 arrayUint32[];
sint32 arraySint32[];
uint64 arrayUint64[];
sint64 arraySint64[];
real32 arrayReal32[];
real64 arrayReal64[];
string arrayString[];
datetime arrayDateTime[];
uint32 ReferenceParamTest(uint32 InParam1, uint32 OutParam2);
uint32 InOutParamTest(boolean scalBool, uint8 scalUint8, sint8 scalSint8, 
    uint16 scalUint16, sint16 scalSint16, uint32 scalUint32, sint32 
    scalSint32, uint64 scalUint64, real32 scalReal32, real64 scalReal64, 
    string scalString, datetime scalDateTime, boolean arrayBool[], 
    uint8 arrayUint8[], sint8 arraySint8[], uint16 arrayUint16[], sint16 
    arraySint16[], uint32 arrayUint32[], sint32 arraySint32[], uint64 
    arrayUint64[], real32 arrayReal32[], real64 arrayReal64[], string 
    arrayString[], datetime arrayDateTime[], uint32 returnValue);
uint32 FullParamTest(boolean inScalBool, uint8 inScalUint8, sint8 inScalSint8, 
    uint16 inScalUint16, sint16 inScalSint16, uint32 inScalUint32, 
    sint32 inScalSint32, uint64 inScalUint64, real32 inScalReal32, 
    real64 inScalReal64, string inScalString, datetime inScalDateTime, 
    boolean outScalBool, uint8 outScalUint8, sint8 outScalSint8, uint16 
    outScalUint16, sint16 outScalSint16, uint32 outScalUint32, sint32 
    outScalSint32, uint64 outScalUint64, real32 outScalReal32, real64 
    outScalReal64, string outScalString, datetime outScalDateTime);
uint32 setProviderParameters(string substituteHostName);
uint32 resetProviderParameters();
};
1 associator names
//ChangedHostName/test/TestProvider:Test_CLITestProviderClass
Return Value= 0
path= //localhost/test/TestProvider:Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "Mike";
Name = "Bob";
scalBool = TRUE;
scalUint8 = 220;
scalSint8 = 124;
scalUint16 = 100;
scalSint16 = 100;
scalUint32 = 100;
scalSint32 = 100;
scalUint64 = 100;
scalSint64 = NULL;
scalReal32 = 1.0000000000000000e+02;
scalReal64 = 1.0000000000000000e+02;
scalString = "teststring";
scalDateTime = "19991224120000.000000+360";
defaultBool = TRUE;
defaultUint8 = 4;
defaultSint8 = 4;
defaultUint16 = 4;
defaultSint16 = 4;
defaultUint32 = 4;
defaultSint32 = 4;
defaultUint64 = 4;
defaultSint64 = 4;
defaultReal32 = NULL;
defaultReal64 = NULL;
defaultString = "test\"embedded\"quote";
defaultDateTime = NULL;
arrayBool = {TRUE, FALSE, TRUE};
arrayUint8 = {4, 128, 240};
arraySint8 = {4, 126, -126};
arrayUint16 = {4, 128, 240};
arraySint16 = {4, 126, -126};
arrayUint32 = {4, 128, 240};
arraySint32 = {4, 126, -126};
arrayUint64 = {4, 128, 240};
arraySint64 = NULL;
arrayReal32 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayReal64 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayString = {"First", "Second", "Third"};
arrayDateTime = {"19991224120000.000000+360", "19991224120000.000000+360", 
    "19991224120000.000000+360"};
requestInputParameters = "role=; resultRole=; associationClass=Test_CLITestProviderLinkClass; "
    "resultClass=; includeQualifiers=false; includeClassOrigin=false; "
    "propertyList=NULL";
};
1 associator names
//localhost/test/TestProvider:Test_CLITestProviderClass.Id="Mike"
path= //localhost/test/TestProvider:Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
};
path= //localhost/test/TestProvider:Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
requestInputParameters = "role=child; resultRole=parent; associationClass=Test_CLITestProviderLinkClass; "
    "resultClass=Test_CLITestProviderClass; includeQualifiers=false; "
    "includeClassOrigin=false; propertyList=requestInputParameters";
};
Return Value= 0
18. +++++ nullvaluetests
Returned Path  Test_CLITestProviderClass.Id="NullValueTest"
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "NullValueTest";
scalBool = NULL;
scalUint32 = NULL;
scalString = NULL;
defaultBool = TRUE;
defaultUint32 = 4;
defaultString = "test\"embedded\"quote";
requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
    "includeClassOrigin=false";
};
Returned Path  Test_CLITestProviderClass.Id="EmptyStringTest"
path= Test_CLITestProviderClass

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "EmptyStringTest";
scalUint32 = NULL;
scalUint64 = 99999;
scalString = NULL;
defaultString = "";
arrayUint32 = {99, 0, 31000, 63000, 4294967295};
requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
    "includeClassOrigin=false";
};
test instance Test_CLITestProviderClass.Id="EmptyStringTest" OK
20. +++++ objectCounterTests
Return Value= 0
1 instances of class Test_CLITestProviderClass returned.
1  Test_CLITestProviderClass returned.
path= Test_CLITestProviderClass.Id="Mike"

//Instance of Test_CLITestProviderClass
instance of Test_CLITestProviderClass
{
Id = "Mike";
Name = "Bob";
scalBool = TRUE;
scalUint8 = 220;
scalSint8 = 124;
scalUint16 = 100;
scalSint16 = 100;
scalUint32 = 100;
scalSint32 = 100;
scalUint64 = 100;
scalSint64 = NULL;
scalReal32 = 1.0000000000000000e+02;
scalReal64 = 1.0000000000000000e+02;
scalString = "teststring";
scalDateTime = "19991224120000.000000+360";
defaultBool = TRUE;
defaultUint8 = 4;
defaultSint8 = 4;
defaultUint16 = 4;
defaultSint16 = 4;
defaultUint32 = 4;
defaultSint32 = 4;
defaultUint64 = 4;
defaultSint64 = 4;
defaultReal32 = NULL;
defaultReal64 = NULL;
defaultString = "test\"embedded\"quote";
defaultDateTime = NULL;
arrayBool = {TRUE, FALSE, TRUE};
arrayUint8 = {4, 128, 240};
arraySint8 = {4, 126, -126};
arrayUint16 = {4, 128, 240};
arraySint16 = {4, 126, -126};
arrayUint32 = {4, 128, 240};
arraySint32 = {4, 126, -126};
arrayUint64 = {4, 128, 240};
arraySint64 = NULL;
arrayReal32 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayReal64 = {4.0000000000000000e+00, 1.2800000000000000e+02, 2.4000000000000000e+02};
arrayString = {"First", "Second", "Third"};
arrayDateTime = {"19991224120000.000000+360", "19991224120000.000000+360", 
    "19991224120000.000000+360"};
requestInputParameters = "propertyList=Id, Name, requestInputParameters, "
    "scalBool, scalUint8, scalSint8, scalUint16, scalSint16, scalUint32, "
    "scalSint32, scalUint64, scalSint64, scalReal32, scalReal64, scalString, "
    "scalDateTime, defaultBool, defaultUint8, defaultSint8, defaultUint16, "
    "defaultSint16, defaultUint32, defaultSint32, defaultUint64, defaultSint64, "
    "defaultReal32, defaultReal64, defaultString, defaultDateTime, arrayBool, "
    "arrayUint8, arraySint8, arrayUint16, arraySint16, arrayUint32, "
    "arraySint32, arrayUint64, arraySint64, arrayReal32, arrayReal64, "
    "arrayString, arrayDateTime; includeQualifiers=false; includeClassOrigin=false";
};
Test_CLITestProviderClass.Id="Mike"
1 instances of class Test_CLITestProviderClass returned.
Failed instances of class count test. Expected= 10 Received= 1
1  Test_CLITestProviderClass returned.
Failed  count test. Expected= 10 Received= 1
1 associators  returned.
Failed associators count test. Expected= 10 Received= 1
1 references  returned.
Failed references count test. Expected= 10 Received= 1
1 associator names Test_CLITestProviderClass returned.
1 referenceNames Test_CLITestProviderClass returned.
Failed referenceNames count test. Expected= 10 Received= 1
Return Value= 0
