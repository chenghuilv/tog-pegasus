//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//
//
//%/////////////////////////////////////////////////////////////////////////////

    [Version("1.0.0"), Description (" Class for testing "
        "stress on system with large numbers of possibly large "
        "instances ")]
class TST_ResponseStressTest
{
    [key]
    string Id;

    [ Description ("Monotonically increasing sequence number for instances "
        "in the response. Cal be used to confirm ordering correctness "
        "at the client. ")]
    Uint64 SequenceNumber;

    [ Description ("Requested count of instances to be delivered from "
        "the set method inout or default. ")]
    Uint64 ResponseCount;

    [ Description ("Requested size for instances from the set invoke method "
         "or default. ")]
    Uint64 RequestedInstanceSize;

    String Pattern;

    [ Description ("Interval from previus instance created by the "
         "provider. This gives some indication about how delivery "
         "gets backed up in the provider.") ]
    Uint64 interval;

    // The following strings are used to pad instance size.
    // Making the strings that are inserted here large
    // allows the provider to create very large instances

    string S1;
    string S2;
    string S3;
    string S4;
    string S5;

    [ Description ("Method sets the parameters for ResponseCount and "
         "approximate size of the returned instances. This persists "
         "until the provider is reloaded."),
    static] Uint32 set(
	    [in] uint64 ResponseCount,
	    [in] uint64 Size);

    [ Description ("Method returns the current control parameters. "),
    static] Uint32 get(
	    [out] uint64 ResponseCount,
	    [out] uint64 Size);

    [ Description ("Method stops the provider from generating instances. "
        "Reset by the next operation or method request. This is an  "
        "attempt to allow the client to stop generation in process."),
    static] Uint32 stop();
};
