//%2006////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2000, 2001, 2002 BMC Software; Hewlett-Packard Development
// Company, L.P.; IBM Corp.; The Open Group; Tivoli Systems.
// Copyright (c) 2003 BMC Software; Hewlett-Packard Development Company, L.P.;
// IBM Corp.; EMC Corporation, The Open Group.
// Copyright (c) 2004 BMC Software; Hewlett-Packard Development Company, L.P.;
// IBM Corp.; EMC Corporation; VERITAS Software Corporation; The Open Group.
// Copyright (c) 2005 Hewlett-Packard Development Company, L.P.; IBM Corp.;
// EMC Corporation; VERITAS Software Corporation; The Open Group.
// Copyright (c) 2006 Hewlett-Packard Development Company, L.P.; IBM Corp.;
// EMC Corporation; Symantec Corporation; The Open Group.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// THE ABOVE COPYRIGHT NOTICE AND THIS PERMISSION NOTICE SHALL BE INCLUDED IN
// ALL COPIES OR SUBSTANTIAL PORTIONS OF THE SOFTWARE. THE SOFTWARE IS PROVIDED
// "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//==============================================================================
#pragma locale ("en_US")

instance of PG_ProviderModule
{
    Description = "The Pegasus Association Provider Module that implements Sample_InstanceProviderClass";
    Caption = "Pegasus Association Test Provider Module";
    Name = "AssociationTestProviderModule";
    Vendor = "OpenPegasus";
    Version = "2.0.0";
    InterfaceType = "PG_DefaultC++";
    InterfaceVersion = "2.0.0";
    Location = "AssociationTestProvider";
};

instance of PG_Provider
{
    ProviderModuleName = "AssociationTestProviderModule";
    Name = "AssociationTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassA";
    ClassName = "TST_ClassA";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassB";
    ClassName = "TST_ClassB";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassC";
    ClassName = "TST_ClassC";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassD";
    ClassName = "TST_ClassD";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc1";
    ClassName = "TST_Assoc1";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc2";
    ClassName = "TST_Assoc2";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc3";
    ClassName = "TST_Assoc3";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc4";
    ClassName = "TST_Assoc4";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc5";
    ClassName = "TST_Assoc5;
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc6";
    ClassName = "TST_Assoc6;
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

