
This directory has various Managed System providers (the MOF files
are located in pegasus/Schemas). 

The provider for class "foo" will typically consist of the 
following components:
  * a file for the provider (e.g., foo.cpp) which will check Defines
      and include the appropriate OS-specific provider file
  * the OS-specific provider files (e.g., foo_HPUX.cpp, foo_Windows.cpp)
      typically a foo_Stub file is provided to jump-start support of
      additional OS-specific files.
  * a general file with the supported operations, making calls out to
	boolean methods in the various OS-specific files.  Return value
	of true indicate the parameter property has been set, false 
	means no value is supplied (e.g., fooProvider.cpp)
  * a general file to create the provider (e.g., fooProviderMain.cpp)

There are subdirectories for each of the providers.  Within each 
subdirectory, there may be a "doc" directory with additional information
(including an HTML document following the WBEMsource template for a 
Provider Data Sheet).

There is a common "tests" directory with tests.

For the OS provider, the following convention is used for test names
on the .xml files:
	PG_OperatingSystem* is a general test expected to pass
 	PG_OS_* is a test that needs to be modified based on 
		the test machine and is expected to pass
	PG_OS_Fail*   is a test that is expected to get a CIM
		error (e.g., an unsupported or ill-formed operation)

The testing strategy has various dimensions:
	exercisers that run through various paths to the provider
		(both supported and unsupported with varients)
	validaters that check the content of responses
	automated tests that can be run as part of a nightly build

Most of the tests are exercisers, some of which are automated (via
inclusion in the Makefile).  Others are not automated.  At this time,
the majority of the validation is done manually (vs. via a generic
client that performs appropriate native OS calls and compares the
results against the CIM content returned).

