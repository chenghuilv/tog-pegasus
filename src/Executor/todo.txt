
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

    (A) Generate and use "indication service session key". What user should
        the key be created for?

    (A) Implement policy.

    (A) Add NEW_SESSION_KEY logic to basic password file authenticator.

    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

    (B) Handle shutdownTimeout option in cimshutdown (pass it as command 
        line argument).

    (B) Test without privilege separation.

    (B) Test on Windows.

    (B) Code walk-through of all diffs to cimservermain.

    CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

    (C) Generate provider policy file automatically from repository.

    (C) Rethink "run as CIM server" policy when starting provider agents.
        Currently, this means run as the same user as the executor (this
        preserves the old behavior). Changing it to use the cimservermain
        user will most likely break existing providers, which were probably
        written with the expectation of running as root.

    (C) Consider implementing rotating one-shot session keys.

    (C) Propose pre-check utility that verifies proper file ownership (e.g.,
        private key must be owned by root, all other files must be owned
        by root but not writable by anyone else). Perhaps the executor could
        perform these checks and print warnings.

    (C) Consider implementing standard Unix password file checking for
        AUTHENTICATE_PASSOWRD and VALIDATE_USER commands.

    (C) Estimate effort of moving SSL certificate authentication to executor.

    FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

