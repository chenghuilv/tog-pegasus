//%2006////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2000, 2001, 2002 BMC Software; Hewlett-Packard Development
// Company, L.P.; IBM Corp.; The Open Group; Tivoli Systems.
// Copyright (c) 2003 BMC Software; Hewlett-Packard Development Company, L.P.;
// IBM Corp.; EMC Corporation, The Open Group.
// Copyright (c) 2004 BMC Software; Hewlett-Packard Development Company, L.P.;
// IBM Corp.; EMC Corporation; VERITAS Software Corporation; The Open Group.
// Copyright (c) 2005 Hewlett-Packard Development Company, L.P.; IBM Corp.;
// EMC Corporation; VERITAS Software Corporation; The Open Group.
// Copyright (c) 2006 Hewlett-Packard Development Company, L.P.; IBM Corp.;
// EMC Corporation; Symantec Corporation; The Open Group.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// THE ABOVE COPYRIGHT NOTICE AND THIS PERMISSION NOTICE SHALL BE INCLUDED IN
// ALL COPIES OR SUBSTANTIAL PORTIONS OF THE SOFTWARE. THE SOFTWARE IS PROVIDED
// "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//==============================================================================
// Class definitions for the Sample Association Provider

// =======================================================================
// JMPIExpAssociation_Person
// =======================================================================
    [Version("1.0.0"), Description ("Top level class that defines a person.")]
class JMPIExpAssociation_Person
{
    [key]
    string Name;
};

// =======================================================================
// JMPIExpAssociation_Teacher
// =======================================================================
    [Version("1.0.0"), Description ("A subclass that defines a teacher.")]
class JMPIExpAssociation_Teacher : JMPIExpAssociation_Person
{
    Uint8 Identifier;
};

// =======================================================================
// JMPIExpAssociation_Student
// =======================================================================
    [Version("1.0.0"), Description ("A subclass that defines a student.")]
class JMPIExpAssociation_Student : JMPIExpAssociation_Person
{
    Uint8 Identifier;
};

// =======================================================================
// JMPIExpAssociation_TeacherStudent
// =======================================================================
// A simple association that associates teacher and student in the
// JMPIExpAssociation_Teacher and JMPIExpAssociation_Student classes.
//
// It shows a many-to-many relationship between a teacher and a student.
//
// A teacher can have MANY students, and a student can have MANY teachers.
//

    [Association, Version("1.0.0"), Description (
        "The JMPIExpAssociation_TeacherStudent association defines the relationship "
        "between teachers and students.") ]
class JMPIExpAssociation_TeacherStudent
{
    [key]
    JMPIExpAssociation_Teacher REF Teaches;
    [key]
    JMPIExpAssociation_Student REF TaughtBy;
};

// =======================================================================
// JMPIExpAssociation_AdvisorStudent
// =======================================================================
// A simple association class that associates teacher and student in the
// JMPIExpAssociation_Teacher and JMPIExpAssociation_Student classes.
//
// It shows a one-to-many relationship between a teacher and student.
//
// A student can have only ONE teacher as advisor, and a teacher who
// is an advisor can have MANY students.
//

    [Association, Version("1.0.0"), Description (
        "The JMPIExpAssociation_AdvisorStudent association identifies the students for "
        "a particular teacher who is also an advisor.")]
class JMPIExpAssociation_AdvisorStudent
{
    [key, Min (1), Max (1)]
    JMPIExpAssociation_Teacher REF advises;
    [key]
    JMPIExpAssociation_Student REF advisedBy;
};
