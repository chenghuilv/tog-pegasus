ifndef ROOT
 ifdef PEGASUS_ROOT
    ROOT =  $(subst \,/,$(PEGASUS_ROOT))
 else
    ROOT = .
 endif
endif

include $(ROOT)/mak/config.mak
include $(ROOT)/mak/commands.mak

DIRS = src

include $(ROOT)/mak/recurse.mak

rebuild: clean depend all repository
	$(MAKE) -s tests

world: depend all repository
	$(MAKE) -s tests

repository: FORCE
	$(MAKE) "-SC" Schemas/Pegasus repository

PEGASUS_LICENSE = \
   license.txt

PEGASUS_LIBRARIES = \
   libCIMxmlIndicationHandler \
   libConfigSettingProvider \
   libNamespaceProvider \
   libProviderRegistrationProvider \
   libUserAuthProvider \
   libpegauthentication \
   libpegclient \
   libpegcliutils \
   libpegcommon \
   libpegcompiler \
   libpegconfig \
   libpegexportclient \
   libpegexportserver \
   libpeggetoopt \
   libpeghandlerservice \
   libpegindicationservice \
   libpeglistener \
   libpegprm \
   libpegprovider \
   libpegprovidermanager \
   libpegrepository \
   libpegserver \
   libpeguser \
   libpegwql \
   libCMPIProviderManager \
   libcmpiCppImpl \
   libDefaultProviderManager

PEGASUS_LIBRARY_LINKS = \
   libpegclient \
   libpegcommon \
   libpegprovider

PEGASUS_PROVIDERS = \
   libComputerSystemProvider \
   libOSProvider \
   libProcessProvider \
   libDefaultProviderManager

PEGASUS_ADMIN_CMDS = \
   cimauth \
   cimconfig \
   cimserver \
   cimuser

PEGASUS_USER_CMDS = \
   cimmof \
   cimmofl \
   cimprovider \
   osinfo \
   wbemexec

PEGASUS_REPOSITORY_DIRS = \
   root \
   root\#PG_Internal \
   root\#PG_InterOp \
   root\#cimv2

PEGASUS_UNIX_MAN_USER_PAGES = \
   cimmof.1 \
   cimprovider.1 \
   osinfo.1 \
   wbemexec.1 

PEGASUS_UNIX_MAN_ADMIN_PAGES = \
   cimauth.1m \
   cimconfig.1m \
   cimserver.1m

INTERNAL_MOF_FILES = \
   PG_Authorization20.mof \
   PG_ConfigSetting20.mof \
   PG_InternalSchema20.mof \
   PG_ShutdownService20.mof \
   PG_User20.mof

INTEROP_MOF_FILES = \
   PG_Events20.mof \
   PG_InterOpSchema20.mof \
   PG_ProviderModule20.mof

MANAGEDSYSTEM_MOF_FILES = \
   PG_ComputerSystem20.mof \
   PG_ComputerSystem20R.mof \
   PG_ManagedSystemSchema20.mof \
   PG_ManagedSystemSchema20R.mof \
   PG_OperatingSystem20.mof \
   PG_OperatingSystem20R.mof \
   PG_UnixProcess20.mof \
   PG_UnixProcess20R.mof

FORCE:

build:
	$(MAKE) -f $(ROOT)/Makefile.Release verify_install_enabled
	$(MAKE) 

verify_install_enabled: FORCE
ifndef PEGASUS_ENABLE_MAKE_INSTALL
	@$(ECHO) "Use of \"make install\" is not enabled for this operating environment."
	@exit 1
endif

preinstall_cleanup: FORCE
	$(foreach i, $(PEGASUS_DIRECTORIES_TO_BE_REMOVED), $(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(i);)
	$(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	$(RMDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)

createPegasusProductDirectories: FORCE
	$(foreach i, $(PRODUCT_DIRECTORY_STRUCTURE), $(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(i);)

createPegasusProductDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LICENSE), $(COPY) $(ROOT)/doc/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_PROD_DIR)/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROD_DIR)/$(i);)

createPegasusSocketDirectory: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_DOMAIN_SOCKET_DIR)
	
createPegasusLocalAuthDirectory: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_LOCAL_AUTH_DIR)
	
createPegasusLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_LIBRARIES), $(COPY) $(PEGASUS_HOME)/lib/$(i)$(LIB_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_SUFFIX); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_rwxr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_SUFFIX);)
	$(foreach i, $(PEGASUS_LIBRARY_LINKS), $(MAKE) -f $(ROOT)/mak/commands.mak createlink OBJECT=$(i)$(LIB_SUFFIX) LINKNAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_DEST_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX);)

createPegasusProviderLibraryDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_PROVIDERS), $(COPY) $(PEGASUS_HOME)/lib/$(i)$(LIB_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_SUFFIX); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_rwxr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_SUFFIX);)
	$(foreach i, $(PEGASUS_PROVIDERS), $(MAKE) -f $(ROOT)/mak/commands.mak createlink OBJECT=$(i)$(LIB_SUFFIX) LINKNAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_PROVIDER_LIB_DIR)/$(i)$(LIB_LINK_SUFFIX);)

createPegasusAdminCmdsDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_ADMIN_CMDS), $(COPY) $(PEGASUS_HOME)/bin/$(i)$(EXE_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i)$(EXE_SUFFIX); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r_xr__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_SBIN_DIR)/$(i)$(EXE_SUFFIX);)

createPegasusUserCmdsDirectoryFiles: FORCE
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)
	$(foreach i, $(PEGASUS_USER_CMDS), $(COPY) $(PEGASUS_HOME)/bin/$(i)$(EXE_SUFFIX) $(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)/$(i)$(EXE_SUFFIX); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_BIN_DIR)/$(i)$(EXE_SUFFIX);)

copyRepositoryNamespaceDirectory: FORCE
	$(CPDIRHIER) $(NAMESPACE_DIR_NAME) $(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/classes
	$(MAKE) -f $(ROOT)/mak/commands.mak sethierpermissions PERMISSIONS="$(P_rw_r__r__)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/classes
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/instances
	$(MAKE) -f $(ROOT)/mak/commands.mak sethierpermissions PERMISSIONS="$(P_rw_r__r__)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/instances
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/qualifiers
	$(MAKE) -f $(ROOT)/mak/commands.mak sethierpermissions PERMISSIONS="$(P_rw_r__r__)" OWNER="$(CIMSERVER_USR)" GROUP="$(CIMSERVER_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_REPOSITORY_DIR)/$(NAMESPACE_DIR_NAME)/qualifiers

createPegasusRepositoryDirectory: FORCE
	$(foreach i, $(PEGASUS_REPOSITORY_DIRS), $(MAKE) --directory=$(PEGASUS_HOME)/repository -f $(ROOT)/Makefile.Release copyRepositoryNamespaceDirectory NAMESPACE_DIR_NAME=$(i);)

createPegasusUnixManPageDirectoryFiles: FORCE
	$(foreach i, $(PEGASUS_UNIX_MAN_USER_PAGES), $(COPY) $(ROOT)/rpm/manLinux/man1.Z/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MANUSER_DIR)/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MANUSER_DIR)/$(i);)
	$(foreach i, $(PEGASUS_UNIX_MAN_ADMIN_PAGES), $(COPY) $(ROOT)/rpm/manLinux/man1m.Z/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MANADMIN_DIR)/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MANADMIN_DIR)/$(i);)

copyCIMSchemaFiles: FORCE
	$(CPDIRHIER) $(PEGASUS_CIM_SCHEMA) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR); 
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)
	$(MAKE) -f $(ROOT)/mak/commands.mak sethierpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/$(PEGASUS_CIM_SCHEMA)
	
createPegasusMOFDirectoryFiles: FORCE
	$(MAKE) --directory=$(ROOT)/Schemas -f $(ROOT)/Makefile.Release copyCIMSchemaFiles
	$(MKDIRHIER) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(Pdr_xr_xr_x)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus
	$(foreach i, $(INTERNAL_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/Internal/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(INTEROP_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/InterOp/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)
	$(foreach i, $(MANAGEDSYSTEM_MOF_FILES), $(COPY) $(ROOT)/Schemas/Pegasus/ManagedSystem/VER20/$(i) $(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i); $(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_MOF_DIR)/Pegasus/$(i);)

create_init_repositoryCMD: FORCE

createPegasusVarDataDirectoryFiles: FORCE
	$(COPY) $(ROOT)/src/Server/cimserver_planned.conf $(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_PLANNED_CONFIG_FILE)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_PLANNED_CONFIG_FILE)

createSSLConfigurationFile: FORCE
	$(RM) $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(TOUCH) $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "[ req ]" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "distinguished_name     = req_distinguished_name"  >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "prompt                 = no"  >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "[ req_distinguished_name ]" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "C                      = UK" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "ST                     = Berkshire" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "L                      = Reading" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "O                      = The Open Group" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "OU                     = The OpenPegasus Project" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf
	$(ECHO) "CN                     = $(GET_HOSTNAME)" >> $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf

createSSLRandomSeedFiles: FORCE
	$(MAKE) -f $(ROOT)/mak/commands.mak createrandomseed FILENAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE)
	$(MAKE) -f $(ROOT)/mak/commands.mak createrandomseed FILENAME=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_WBEMEXEC_RANDOMFILE)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_VARDATA_DIR)/$(PEGASUS_WBEMEXEC_RANDOMFILE)


createServerCertificateFiles: FORCE
ifdef PEGASUS_SSL_RANDOMFILE
	$(OPENSSL_COMMAND) req -x509 -days 3650 -newkey rsa:2048 -rand $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/$(PEGASUS_CIMSERVER_RANDOMFILE) -nodes -config $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf -keyout $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE) -out $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) 
else
	$(OPENSSL_COMMAND) req -x509 -days 3650 -newkey rsa:2048 -nodes -config $(PEGASUS_STAGING_DIR)$(PEGASUS_CONFIG_DIR)/ssl.cnf -keyout $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE) -out $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) 
endif
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_KEY_FILE)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r________)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE)

createClientCertificateFiles: FORCE
	$(COPY) $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_CERT_FILE) $(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_TRUSTSTORE)
	$(MAKE) -f $(ROOT)/mak/commands.mak setpermissions PERMISSIONS="$(P_r__r__r__)" OWNER="$(INSTALL_USR)" GROUP="$(INSTALL_GRP)" OBJECT=$(PEGASUS_STAGING_DIR)$(PEGASUS_PEM_DIR)/$(PEGASUS_SSL_TRUSTSTORE)

createPegasusDirectories: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusProductDirectories
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusSocketDirectory
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusLocalAuthDirectory

copyPegasusFiles: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusProductDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusProviderLibraryDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusAdminCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusUserCmdsDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusVarDataDirectoryFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusRepositoryDirectory
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusUnixManPageDirectoryFiles 
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusMOFDirectoryFiles

createPegasusFiles: FORCE
ifdef PEGASUS_HAS_SSL
	$(MAKE) -f $(ROOT)/Makefile.Release createSSLConfigurationFile
ifdef PEGASUS_SSL_RANDOMFILE
	$(MAKE) -f $(ROOT)/Makefile.Release createSSLRandomSeedFiles
endif
	$(MAKE) -f $(ROOT)/Makefile.Release createServerCertificateFiles
	$(MAKE) -f $(ROOT)/Makefile.Release createClientCertificateFiles
endif

install: FORCE
	$(MAKE) -f $(ROOT)/Makefile.Release verify_install_enabled
	$(MAKE) -f $(ROOT)/Makefile.Release preinstall_cleanup
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusDirectories 
	$(MAKE) -f $(ROOT)/Makefile.Release copyPegasusFiles 
	$(MAKE) -f $(ROOT)/Makefile.Release createPegasusFiles 
